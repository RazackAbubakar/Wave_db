1. SELECT COUNT (u_id) FROM Public.users;


2. SELECT COUNT (transfer_id) from Public.transfers 
   WHERE send_amount_currency= 'CFA';


3. SELECT distinct(count(u_id))from Public.transfers 
   WHERE send_amount_currency= 'CFA';


4. SELECT TO_CHAR(TO_DATE (EXTRACT(MONTH FROM when_created)::text, 'MM'), 'Month')    AS months,
  
   COUNT(atx_id) FROM public.agent_transactions
 
   WHERE EXTRACT(YEAR from agent_transactions.when_created) = 2018

   GROUP BY EXTRACT(MONTH from agent_transactions.when_created);

5. WITH agent_withdrawers AS
(SELECT COUNT (agent_id)
AS net_withdrawers
FROM agent_transactions

   HAVING COUNT (amount)
IN (SELECT COUNT (amount) 
   FROM agent_transactions 
   WHERE amount > -1
AND amount !=0 HAVING COUNT (amount) > (SELECT COUNT(amount)
FROM agent_transactions 
   WHERE amount < 1 AND  AMOUNT !=0)))
SELECT net_withdrawers
FROM agent_withdrawers;




6. SELECT city, COUNT(atx_id) AS volume
    FROM public.agents, public.agent_transactions
  WHERE agent_transactions.when_created BETWEEN now() And now()-interval'7 days'
   GROUP BY city;


7. CREATE TABLE atx_volume_city_country_summary AS 
SELECT COUNT(atx_id) AS volume, city, country 

   FROM public.agent_transactions
INNER 
   JOIN public.agents ON agents.agent_id = agent_transactions.agent_id 

   WHERE agent_transactions.when_created > now() -INTERVAL '7 days'
GROUP BY city, country;




8. CREATE VIEW send_ne_volume2 AS SELECT COUNT(atx_id) AS volume,
   kind,country 
FROM public.agent_transactions,public.transfers, public.agents
 
   WHERE agent_transactions.when_created BETWEEN '2018-11-23' AND '2018-12-30'
--agent_transactions.when_created>current_date -interval '7 days'
   GROUP BY kind,country;


9. SELECT count(transfers.source_wallet_id) AS Unique_Senders, 
   count(transfer_id) AS Transaction_count, transfers.kind AS Transfer_Kind, wallets.ledger_location AS Country, 
   sum(transfers.send_amount_scalar) AS Volume FROM transfers 
   INNER JOIN wallets ON transfers.source_wallet_id = wallets.wallet_id where (transfers.when_created > (NOW() - INTERVAL '1 week'))
   GROUP BY wallets.ledger_location, transfers.kind;



10. SELECT transfers.source_wallet_id, 
    sum( transfers.send_amount_scalar) AS total_sent 
    FROM transfers
WHERE send_amount_currency = 'CFA'
   
    AND (transfers.when_created > (now() - INTERVAL '10 month'))
  
     GROUP BY transfers.source_wallet_id
 
      HAVING sum( transfers.send_amount_scalar)>10000000